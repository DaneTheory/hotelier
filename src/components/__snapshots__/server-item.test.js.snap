// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServerItem matches the snapshot when the server is running 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServerItem
    server={
        Object {
            "id": "test-server-1",
            "status": "running",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="pull-left server-name server-name--running"
          onClick={[Function]}
>
          test-server-1
</div>,
        <div
          className="pull-right"
>
          <div
                    className="d-inline"
          >
                    <CSSTransition
                              classNames="server-item"
                              in={true}
                              timeout={
                                        Object {
                                                  "enter": 350,
                                                  "exit": 350,
                                                }
                              }
                              unmountOnExit={true}
                    >
                              <button
                                        className="btn btn-default mr-1 restart-button"
                                        onClick={[Function]}
                              >
                                        <span
                                                  className="icon icon-arrows-ccw "
                                        />
                              </button>
                    </CSSTransition>
          </div>
          <div
                    className="d-inline"
          >
                    <button
                              className="btn btn-negative text-white"
                              onClick={[Function]}
                              type="button"
                    >
                              <span
                                        className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                              />
                    </button>
          </div>
</div>,
      ],
      "className": "list-group-item server-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test-server-1",
          "className": "pull-left server-name server-name--running",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "test-server-1",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="d-inline"
>
              <CSSTransition
                            classNames="server-item"
                            in={true}
                            timeout={
                                          Object {
                                                        "enter": 350,
                                                        "exit": 350,
                                                      }
                            }
                            unmountOnExit={true}
              >
                            <button
                                          className="btn btn-default mr-1 restart-button"
                                          onClick={[Function]}
                            >
                                          <span
                                                        className="icon icon-arrows-ccw "
                                          />
                            </button>
              </CSSTransition>
</div>,
            <div
              className="d-inline"
>
              <button
                            className="btn btn-negative text-white"
                            onClick={[Function]}
                            type="button"
              >
                            <span
                                          className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                            />
              </button>
</div>,
          ],
          "className": "pull-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CSSTransition
                classNames="server-item"
                in={true}
                timeout={
                                Object {
                                                "enter": 350,
                                                "exit": 350,
                                              }
                }
                unmountOnExit={true}
>
                <button
                                className="btn btn-default mr-1 restart-button"
                                onClick={[Function]}
                >
                                <span
                                                className="icon icon-arrows-ccw "
                                />
                </button>
</CSSTransition>,
              "className": "d-inline",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="btn btn-default mr-1 restart-button"
                  onClick={[Function]}
>
                  <span
                                    className="icon icon-arrows-ccw "
                  />
</button>,
                "classNames": "server-item",
                "in": true,
                "timeout": Object {
                  "enter": 350,
                  "exit": 350,
                },
                "unmountOnExit": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="icon icon-arrows-ccw "
/>,
                  "className": "btn btn-default mr-1 restart-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon icon-arrows-ccw ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn btn-negative text-white"
                onClick={[Function]}
                type="button"
>
                <span
                                className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                />
</button>,
              "className": "d-inline",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
/>,
                "className": "btn btn-negative text-white",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "tcon tcon-remove tcon-remove--chevron-right btn-negative text-white",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="pull-left server-name server-name--running"
            onClick={[Function]}
>
            test-server-1
</div>,
          <div
            className="pull-right"
>
            <div
                        className="d-inline"
            >
                        <CSSTransition
                                    classNames="server-item"
                                    in={true}
                                    timeout={
                                                Object {
                                                            "enter": 350,
                                                            "exit": 350,
                                                          }
                                    }
                                    unmountOnExit={true}
                        >
                                    <button
                                                className="btn btn-default mr-1 restart-button"
                                                onClick={[Function]}
                                    >
                                                <span
                                                            className="icon icon-arrows-ccw "
                                                />
                                    </button>
                        </CSSTransition>
            </div>
            <div
                        className="d-inline"
            >
                        <button
                                    className="btn btn-negative text-white"
                                    onClick={[Function]}
                                    type="button"
                        >
                                    <span
                                                className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                                    />
                        </button>
            </div>
</div>,
        ],
        "className": "list-group-item server-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test-server-1",
            "className": "pull-left server-name server-name--running",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "test-server-1",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="d-inline"
>
                <CSSTransition
                                classNames="server-item"
                                in={true}
                                timeout={
                                                Object {
                                                                "enter": 350,
                                                                "exit": 350,
                                                              }
                                }
                                unmountOnExit={true}
                >
                                <button
                                                className="btn btn-default mr-1 restart-button"
                                                onClick={[Function]}
                                >
                                                <span
                                                                className="icon icon-arrows-ccw "
                                                />
                                </button>
                </CSSTransition>
</div>,
              <div
                className="d-inline"
>
                <button
                                className="btn btn-negative text-white"
                                onClick={[Function]}
                                type="button"
                >
                                <span
                                                className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                                />
                </button>
</div>,
            ],
            "className": "pull-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CSSTransition
                  classNames="server-item"
                  in={true}
                  timeout={
                                    Object {
                                                      "enter": 350,
                                                      "exit": 350,
                                                    }
                  }
                  unmountOnExit={true}
>
                  <button
                                    className="btn btn-default mr-1 restart-button"
                                    onClick={[Function]}
                  >
                                    <span
                                                      className="icon icon-arrows-ccw "
                                    />
                  </button>
</CSSTransition>,
                "className": "d-inline",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <button
                    className="btn btn-default mr-1 restart-button"
                    onClick={[Function]}
>
                    <span
                                        className="icon icon-arrows-ccw "
                    />
</button>,
                  "classNames": "server-item",
                  "in": true,
                  "timeout": Object {
                    "enter": 350,
                    "exit": 350,
                  },
                  "unmountOnExit": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="icon icon-arrows-ccw "
/>,
                    "className": "btn btn-default mr-1 restart-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon icon-arrows-ccw ",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": "button",
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn btn-negative text-white"
                  onClick={[Function]}
                  type="button"
>
                  <span
                                    className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
                  />
</button>,
                "className": "d-inline",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="tcon tcon-remove tcon-remove--chevron-right btn-negative text-white"
/>,
                  "className": "btn btn-negative text-white",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "tcon tcon-remove tcon-remove--chevron-right btn-negative text-white",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ServerItem matches the snapshot when the server is stopped 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServerItem
    server={
        Object {
            "id": "test-server-2",
            "status": "stopped",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="pull-left server-name server-name--stopped"
          onClick={[Function]}
>
          test-server-2
</div>,
        <div
          className="pull-right"
>
          <div
                    className="d-inline"
          >
                    <CSSTransition
                              classNames="server-item"
                              in={false}
                              timeout={
                                        Object {
                                                  "enter": 350,
                                                  "exit": 350,
                                                }
                              }
                              unmountOnExit={true}
                    >
                              <button
                                        className="btn btn-default mr-1 restart-button"
                                        onClick={[Function]}
                              >
                                        <span
                                                  className="icon icon-arrows-ccw "
                                        />
                              </button>
                    </CSSTransition>
          </div>
          <div
                    className="d-inline"
          >
                    <button
                              className="btn tcon-transform btn-default"
                              onClick={[Function]}
                              type="button"
                    >
                              <span
                                        className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                              />
                    </button>
          </div>
</div>,
      ],
      "className": "list-group-item server-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test-server-2",
          "className": "pull-left server-name server-name--stopped",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "test-server-2",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="d-inline"
>
              <CSSTransition
                            classNames="server-item"
                            in={false}
                            timeout={
                                          Object {
                                                        "enter": 350,
                                                        "exit": 350,
                                                      }
                            }
                            unmountOnExit={true}
              >
                            <button
                                          className="btn btn-default mr-1 restart-button"
                                          onClick={[Function]}
                            >
                                          <span
                                                        className="icon icon-arrows-ccw "
                                          />
                            </button>
              </CSSTransition>
</div>,
            <div
              className="d-inline"
>
              <button
                            className="btn tcon-transform btn-default"
                            onClick={[Function]}
                            type="button"
              >
                            <span
                                          className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                            />
              </button>
</div>,
          ],
          "className": "pull-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CSSTransition
                classNames="server-item"
                in={false}
                timeout={
                                Object {
                                                "enter": 350,
                                                "exit": 350,
                                              }
                }
                unmountOnExit={true}
>
                <button
                                className="btn btn-default mr-1 restart-button"
                                onClick={[Function]}
                >
                                <span
                                                className="icon icon-arrows-ccw "
                                />
                </button>
</CSSTransition>,
              "className": "d-inline",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="btn btn-default mr-1 restart-button"
                  onClick={[Function]}
>
                  <span
                                    className="icon icon-arrows-ccw "
                  />
</button>,
                "classNames": "server-item",
                "in": false,
                "timeout": Object {
                  "enter": 350,
                  "exit": 350,
                },
                "unmountOnExit": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="icon icon-arrows-ccw "
/>,
                  "className": "btn btn-default mr-1 restart-button",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "icon icon-arrows-ccw ",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn tcon-transform btn-default"
                onClick={[Function]}
                type="button"
>
                <span
                                className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                />
</button>,
              "className": "d-inline",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
/>,
                "className": "btn tcon-transform btn-default",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="pull-left server-name server-name--stopped"
            onClick={[Function]}
>
            test-server-2
</div>,
          <div
            className="pull-right"
>
            <div
                        className="d-inline"
            >
                        <CSSTransition
                                    classNames="server-item"
                                    in={false}
                                    timeout={
                                                Object {
                                                            "enter": 350,
                                                            "exit": 350,
                                                          }
                                    }
                                    unmountOnExit={true}
                        >
                                    <button
                                                className="btn btn-default mr-1 restart-button"
                                                onClick={[Function]}
                                    >
                                                <span
                                                            className="icon icon-arrows-ccw "
                                                />
                                    </button>
                        </CSSTransition>
            </div>
            <div
                        className="d-inline"
            >
                        <button
                                    className="btn tcon-transform btn-default"
                                    onClick={[Function]}
                                    type="button"
                        >
                                    <span
                                                className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                                    />
                        </button>
            </div>
</div>,
        ],
        "className": "list-group-item server-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test-server-2",
            "className": "pull-left server-name server-name--stopped",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "test-server-2",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="d-inline"
>
                <CSSTransition
                                classNames="server-item"
                                in={false}
                                timeout={
                                                Object {
                                                                "enter": 350,
                                                                "exit": 350,
                                                              }
                                }
                                unmountOnExit={true}
                >
                                <button
                                                className="btn btn-default mr-1 restart-button"
                                                onClick={[Function]}
                                >
                                                <span
                                                                className="icon icon-arrows-ccw "
                                                />
                                </button>
                </CSSTransition>
</div>,
              <div
                className="d-inline"
>
                <button
                                className="btn tcon-transform btn-default"
                                onClick={[Function]}
                                type="button"
                >
                                <span
                                                className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                                />
                </button>
</div>,
            ],
            "className": "pull-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CSSTransition
                  classNames="server-item"
                  in={false}
                  timeout={
                                    Object {
                                                      "enter": 350,
                                                      "exit": 350,
                                                    }
                  }
                  unmountOnExit={true}
>
                  <button
                                    className="btn btn-default mr-1 restart-button"
                                    onClick={[Function]}
                  >
                                    <span
                                                      className="icon icon-arrows-ccw "
                                    />
                  </button>
</CSSTransition>,
                "className": "d-inline",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <button
                    className="btn btn-default mr-1 restart-button"
                    onClick={[Function]}
>
                    <span
                                        className="icon icon-arrows-ccw "
                    />
</button>,
                  "classNames": "server-item",
                  "in": false,
                  "timeout": Object {
                    "enter": 350,
                    "exit": 350,
                  },
                  "unmountOnExit": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="icon icon-arrows-ccw "
/>,
                    "className": "btn btn-default mr-1 restart-button",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "icon icon-arrows-ccw ",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "span",
                  },
                  "type": "button",
                },
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="btn tcon-transform btn-default"
                  onClick={[Function]}
                  type="button"
>
                  <span
                                    className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
                  />
</button>,
                "className": "d-inline",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default"
/>,
                  "className": "btn tcon-transform btn-default",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "tcon tcon-remove tcon-remove--chevron-right tcon-transform btn-default",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
